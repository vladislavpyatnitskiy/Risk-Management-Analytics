# Monte Carlo code

lapply(c("quantmod",
         "ggplot2",
         "data.table",
         "timeSeries"),
       require,
       character.only = TRUE)

tickers <- c("AMR")

portfolioPrices <- NULL
for (Ticker in tickers) 
  portfolioPrices <- cbind(portfolioPrices,
                                 getSymbols(Ticker,
                                            src = "yahoo",
                                            auto.assign=FALSE)[,4])


portfolioPrices <- portfolioPrices[apply(portfolioPrices,
                                         1,
                                         function(x) all(!is.na(x))),]

colnames(portfolioPrices) <- tickers

portfolioReturns <- ROC(portfolioPrices,
                        type = "discrete")
portfolioReturns <-as.timeSeries(portfolioPrices)

lrtn <- portfolioReturns / lag(portfolioReturns)
lrtn <- as.numeric(lrtn)
lrtn[1] <- 1

#lrtn=diff(log(portfolioReturns))
#lrtn <- lrtn[-1,]
#lrtn <- as.numeric(lrtn)

# Monte part
set.seed(0)
ndays <- 1000
paths <- replicate(n = 100, 
                   expr = round(sample(lrtn,
                                       ndays,
                                       replace = TRUE),
                                2))
paths <- apply(paths,
               2,
               cumprod)

# prepare

paths <- data.table(paths)
paths$days <- 1:nrow(paths)
paths <- melt(paths,
              id.vars = "days")

# visualise

ggplot(paths, aes(x = days, y = (value - 1) * 100,
                  col = variable)) +
  geom_line() +
  theme_bw() +
  theme(legend.position = "none") +
  xlab("Days Invested") + 
  ylab("Portfolio Return (%)")

summary((paths$value[paths$days == ndays] - 1) * 100)
mean((paths$value[paths$days] - 1) * 100 < 0)
